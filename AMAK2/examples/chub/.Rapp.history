ls
plot(1:10)
14.6/.35
x=1:10
x
x=1:1000
write.csv("myx.csv",x)
write.csv(x,"myx.csv")
getwd()
q()
library(rsbt)
?rsbt
q()
require(PBSmodelling)
library(rsbt)
?rsbt
q()
require(PBSmodelling)
library(rsbt)
?rsbt
q()
ls()
x=1:100
stats::quantile(x)
stats::quantile(x,p=c(.2,.5))
stats::quantile(x,p=c(.2,.q5))
q()
stats::quantile(x,p=c(.2,.q5))
ls()
q()
rm(list=ls())
require(PBSmodelling)
library(devtools)
install_github(repo="cran/PBSmodelling")
install_github(repo="cran/PBSadmb")
require(PBSmodelling)
source(paste(fndir,"read-admb",sep=""))
fndir<- "/Users/jim/Dropbox/R_common/"
outdir="/Users/jim/OneDrive/ebswp/prg/"
Figdir="/Users/jim/OneDrive/ebswp/prg/figs/"
source(paste(fndir,"adfunctions.r",sep=""))
source(paste(fndir,"read-admb",sep=""))
source(paste(fndir,"read-admb.r",sep=""))
source(paste("adfunctions2.r",sep=""))
source("af.r")
getwd()
ls()
read_admb(paste(outdir,"arc/mod0.4_for_R.rep",sep=""))
read_admb
read_rep(paste(outdir,"arc/mod0.4_for_R.rep",sep=""))
q()
ls()
require(PBSadmb)
q()
library(gmr)
q()
ls
ls9)
ls()
q
q()
library("devtools")
install_github("kaskr/adcomp/TMB") #
# source script to get INLA from the web#
source("http://www.math.ntnu.no/inla/givemeINLA.R")
install_github("james-thorson/SpatialDFA", auth_token="918291a743d6fe53aecec3bfc4a27d2b850c688d")
install_github("james-thorson/Spatial_DFA", auth_token="918291a743d6fe53aecec3bfc4a27d2b850c688d")
library(SpatialDFA)
q()
library(gmr)
library(dplyr)
library(reshape2)
library(ggplot2)
library(MASS)
q()
library(dplyr)
library(reshape2)
library(ggplot2)
.OVERLAY  = TRUE
.PWD      = "/Users/Jim/_mymods/seacode/gmacs/Rsrc/R4GMACS"
.LIB      = "./LIB"
.RFILES   = list.files(.LIB,pattern="\\.[Rr]$")
q()
library(TMB)
?TMB
??TMB
load("/Users/jim/_mymods/kaskr/adcomp/admb_examples/sam.output.RData")
ls()
cmd1
cmd2
rep
ls
ls()
tim2
tim1
load("/Users/jim/_mymods/kaskr/adcomp/tmb_examples/sam.output.RData")
ls
ls()
tim2
tim 1
tim1
q()
setwd("/users/jim/_mymods/AMAK/examples/chub")
source("R/read.admb.R")
d=read.dat("chub.dat")
require(PBSadmb)
source("R/ADfunctions2.r")
source("~/dropbox/R_common/ADfunctions.r")
mod1<- readList("arc/mod1_R.rep")
mod2<- readList("arc/mod2_R.rep")
mod3<- readList("arc/mod3_R.rep")
plt_proj(mod1)
plt_proj(mod2)
CatchFit(mod1)
source("R/ADfunctions2.r")
CatchFit(mod1)
CatchFit(mod2)
spwn_ratio(mod1)
Indices(mod1,"Model 1",fy=1970,ly=2014)
Indices(mod2,"Model 2",fy=1970,ly=2014)
Indices(mod3,"Model 3",fy=1970,ly=2014)
Mntns(mod1,"Model 1")
p.rec.hist(mod1,ylab="Age 1 recruitment",fy=1950,ly=2014)
rec_age=1
p.rec.hist(mod1,ylab="Age 1 recruitment",fy=1950,ly=2014)
p.rec.hist(mod2,ylab="Age 1 recruitment",fy=1950,ly=2014)
p.rec.hist(mod3,ylab="Age 1 recruitment",fy=1950,ly=2014)
p.rec.hist(mod1,ylab="Age 1 recruitment",fy=1950,ly=2014,main="Model 1")
p.rec.hist(mod2,ylab="Age 1 recruitment",fy=1950,ly=2014,main="Model 1")
p.rec.hist(mod3,ylab="Age 1 recruitment",fy=1950,ly=2014,main="Model 1")
p.rec.hist(mod2,ylab="Age 1 recruitment",fy=1950,ly=2014,main="Model 2")
p.rec.hist(mod3,ylab="Age 1 recruitment",fy=1950,ly=2014,main="Model 3")
p.eff.n(mod1,typ="f")
p.biom.pol(mod1)
detach()
detach()
p.biom.pol(mod1)
p.biom.pol(mod2)
p.biom.pol(mod3)
p.biom.pol(mod1,main="Model 1")
p.biom.pol(mod2)
p.biom.pol(mod3)
p.biom.pol(mod1)
p.biom.pol(mod2)
p.biom.pol(mod3)
p.biom.stk(mod1,typ="R")
CatchFit(mod2)
CatchFit(mod2,ylim=c(0,1e6))
source("~/dropbox/R_common/ADfunctions.r")
CatchFit(mod2)
p.catch.fit(mod1,f=1,ylab="Catch biomass (t)" ,ylim=c(0,1800000))
p.catch.fit(mod1,f=1,ylab="Catch biomass (t)" ,ylim=c(0,1000000))
p.catch.fit(mod1,f=2,ylab="Catch biomass (t)" ,ylim=c(0,1000000))
p.catch.fit(mod1,f=3,ylab="Catch biomass (t)" ,ylim=c(0,1000000))
p.catch.fit(mod1,f=3,ylab="Catch biomass (t)" ,ylim=c(0,1300000))
p.catch.fit(mod1,f=1,ylab="Catch biomass (t)" ,ylim=c(0,1500000))
p.catch.fit(mod1,f=2,ylab="Catch biomass (t)" ,ylim=c(0,1500000))
p.catch.fit(mod1,f=3,ylab="Catch biomass (t)" ,ylim=c(0,1500000))
p.catch.fit(mod1,f=1,ylab="Catch biomass (t)" ,ylim=c(0,1700000))
p.catch.fit(mod1,f=2,ylab="Catch biomass (t)" ,ylim=c(0,1700000))
p.catch.fit(mod1,f=3,ylab="Catch biomass (t)" ,ylim=c(0,1700000))
Mntns(mod1,"Model 1")
sel.age.mountain(mod2, f=1, xvec=NULL, yvec=NULL, zscale=3, fy=1977,ly=2014)
q()
